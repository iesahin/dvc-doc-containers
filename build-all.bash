#!/bin/bash


# This script builds all Docker containers described by Dockerfiles in this repository
# For each Dockerfile it runs: 
# $ docker build -t $TAGPREFIX/$TAG 
# and
# $ docker push -t $TAGPREFIX/$TAG
#
# $TAGPREFIX is defined in this file. 
# If a Dockerfile has a Dockertag file in the same directory, it's read from there
# Otherwise $TAG is generated by replacing / and <space> with - in the directory name. 
#
# docker build command uses --no-cache option to prevent stale layers to be used. 

RELEASE_HASH=$(curl -s https://api.github.com/repos/iterative/dvc/releases/latest | sha256sum)

TAGPREFIX=dvcorg
DIR=$(dirname $0)
cd "${DIR}"

find $DIR -name Dockerfile | sort | while read -r filepath ; do
    dockerdir=$(dirname ${filepath})
    tagfile=${dockerdir}/Dockertag
    if [ -f ${tagfile} ] ; then
        TAG=$(head -n 1 ${tagfile})
    else
        TAG=$(echo "${dockerdir}[3,100]}" | tr '/ ' '--')
    fi
    echo "BUILDING: ${dockerdir} with the tag: ${TAGPREFIX}/${TAG}"
    docker build --build-arg RELEASE_HASH=${RELEASE_HASH} -t ${TAGPREFIX}/${TAG} ${dockerdirw}
    echo "PUSHING: ${dockerdir} with the tag: ${TAGPREFIX}/${TAG}"
    docker push ${TAGPREFIX}/${TAG}
done
